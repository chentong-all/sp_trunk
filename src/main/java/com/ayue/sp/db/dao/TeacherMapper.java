package com.ayue.sp.db.dao;

import com.ayue.sp.db.po.Teacher;
import com.ayue.sp.db.po.Teacher;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface TeacherMapper {

        

        /**
         * This method was generated by MyBatis Generator. This method corresponds to the database table Teacher
         * @mbg.generated  Wed Oct 07 14:57:35 CST 2020
         */
        int deleteByPrimaryKey(Integer id);

        /**
         * This method was generated by MyBatis Generator. This method corresponds to the database table Teacher
         * @mbg.generated  Wed Oct 07 14:57:35 CST 2020
         */
        int insert(Teacher record);

        /**
         * This method was generated by MyBatis Generator. This method corresponds to the database table Teacher
         * @mbg.generated  Wed Oct 07 14:57:35 CST 2020
         */
        int insertSelective(Teacher record);



        /**
         * This method was generated by MyBatis Generator. This method corresponds to the database table Teacher
         * @mbg.generated  Wed Oct 07 14:57:35 CST 2020
         */
        Teacher selectByPrimaryKey(Integer id);
        List<Teacher> selectByPrimaryKeyAll();
        Integer selectByEnergyBean(Integer id);

        List<Integer> getTeacherLables(String labels);

        List<Integer> getTeacherLablesByLables(String labels);

        /**
         * This method was generated by MyBatis Generator. This method corresponds to the database table Teacher
         * @mbg.generated  Wed Oct 07 14:57:35 CST 2020
         */
        int updateByPrimaryKeySelective(Teacher record);

        /**
         * This method was generated by MyBatis Generator. This method corresponds to the database table Teacher
         * @mbg.generated  Wed Oct 07 14:57:35 CST 2020
         */
        int updateByPrimaryKey(Teacher record);

        int resetDayTicket();
        int updateRank(List<Teacher> Teachers);

        int resetWeekTicket();

        int getMaxTeacherId();

        int batchUpdateHistory(List<Teacher> Teachers);

        void addForwardCount(Integer TeacherId);

        List<Teacher> getTeacherName(List<Integer> collect);
        Teacher getTeacherLogin(@Param("name") String TeacherName, @Param("password") String password);
        void updateTeacherTicket(@Param("ticket") Integer ticket, @Param("TeacherId") Integer TeacherId);
}